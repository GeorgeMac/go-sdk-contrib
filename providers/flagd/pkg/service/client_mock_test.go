// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/service/client.go

// Package service_test is a generated GoMock package.
package service_test

import (
	reflect "reflect"

	schemav1connect "buf.build/gen/go/open-feature/flagd/bufbuild/connect-go/schema/v1/schemav1connect"
	gomock "github.com/golang/mock/gomock"
	service "github.com/open-feature/go-sdk-contrib/providers/flagd/pkg/service"
)

// MockiClient is a mock of iClient interface.
type MockiClient struct {
	ctrl     *gomock.Controller
	recorder *MockiClientMockRecorder
}

// MockiClientMockRecorder is the mock recorder for MockiClient.
type MockiClientMockRecorder struct {
	mock *MockiClient
}

// NewMockiClient creates a new mock instance.
func NewMockiClient(ctrl *gomock.Controller) *MockiClient {
	mock := &MockiClient{ctrl: ctrl}
	mock.recorder = &MockiClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiClient) EXPECT() *MockiClientMockRecorder {
	return m.recorder
}

// Configuration mocks base method.
func (m *MockiClient) Configuration() *service.ServiceConfiguration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Configuration")
	ret0, _ := ret[0].(*service.ServiceConfiguration)
	return ret0
}

// Configuration indicates an expected call of Configuration.
func (mr *MockiClientMockRecorder) Configuration() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Configuration", reflect.TypeOf((*MockiClient)(nil).Configuration))
}

// Instance mocks base method.
func (m *MockiClient) Instance() schemav1connect.ServiceClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Instance")
	ret0, _ := ret[0].(schemav1connect.ServiceClient)
	return ret0
}

// Instance indicates an expected call of Instance.
func (mr *MockiClientMockRecorder) Instance() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Instance", reflect.TypeOf((*MockiClient)(nil).Instance))
}
